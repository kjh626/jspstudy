<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mybatis.mapper.student">

	<!-- 1. 목록 -->
	<select id="selectAllStudentList" resultType="Student">
		SELECT STU_NO, NAME, KOR, ENG, MATH, AVE, GRADE
		  FROM STUDENT
		 ORDER BY STU_NO
	</select>
	
	<!-- 2. 전체 학생 수 -->
	<select id="getAllStudentCount" resultType="int">
		SELECT COUNT(*)
		  FROM STUDENT
	</select>
	
	<!-- 3. 전체 점수 평균 -->
	<select id="getAllStudentAverage" resultType="double">
		SELECT NVL(AVG(AVE), 0)
		  FROM STUDENT
	</select>
	
	<!-- 4. 삽입 -->
	<!-- if대신 사용할 수 있는 오라클용 case쿼리문. ※동일한 일을 자바에서도 할 수 있고, DB에서도 할 수 있으면 DB에서 하자 -->
	<insert id="insertStudent" parameterType="Student">
		INSERT INTO STUDENT
			(STU_NO
			, NAME
			, KOR
			, ENG
			, MATH
			, AVE
			, GRADE)
		VALUES
			(STUDENT_SEQ.NEXTVAL
			, #{name}
			, #{kor}
			, #{eng}
			, #{math}
			, (#{kor} + #{eng} + #{math}) / 3
			, CASE
				WHEN (#{kor} + #{eng} + #{math}) / 3 >= 90 THEN 'A'
				WHEN (#{kor} + #{eng} + #{math}) / 3 >= 80 THEN 'B'
				WHEN (#{kor} + #{eng} + #{math}) / 3 >= 70 THEN 'C'
				WHEN (#{kor} + #{eng} + #{math}) / 3 >= 60 THEN 'D'
				ELSE 'F'
			  END)
	</insert>
	
	<!-- 5. 학생 조회 -->
	<!--  파라미터 타입으로 맵을 쓸 때 맵에 들어있는 키 값을 그대로 변수이름으로 사용한다. →#{begin}, #{end} -->
	<select id="findStudentList" parameterType="Map" resultType="Student">
		SELECT STU_NO, NAME, KOR, ENG, MATH, AVE, GRADE
		  FROM STUDENT
		 WHERE AVE BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 6. 조회된 학생 수 -->
	<select id="getFindStudentCount" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		  FROM STUDENT
		 WHERE AVE BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 7. 조회된 학생 점수 평균 -->
	<select id="getFindStudentAverage" parameterType="Map" resultType="double">
		SELECT NVL(AVG(AVE), 0)
		  FROM STUDENT
		 WHERE AVE BETWEEN #{begin} AND #{end}
	</select>
	
	<!-- 8. 삭제 -->
	<delete id="deleteStudent" parameterType="int">
		DELETE
		  FROM STUDENT
		 WHERE STU_NO = #{stuNo}
	</delete>
	
	<!-- 9. 상세 -->
	<select id="selectStudentByNo" parameterType="int" resultType="Student">
		SELECT STU_NO, NAME, KOR, ENG, MATH, AVE, GRADE
		  FROM STUDENT
		 WHERE STU_NO = #{stuNo}
	</select>
	
	<!-- 10. 수정 -->
	<update id="updateStudent" parameterType="Student">
		UPDATE STUDENT
		   SET NAME = #{name}
		     , KOR = #{kor}
		     , ENG = #{eng}
		     , MATH = #{math}
		     , AVE = (#{kor} + #{eng} + #{math}) / 3
		     , GRADE = (CASE
						 WHEN (#{kor} + #{eng} + #{math}) / 3 >= 90 THEN 'A'
						 WHEN (#{kor} + #{eng} + #{math}) / 3 >= 80 THEN 'B'
						 WHEN (#{kor} + #{eng} + #{math}) / 3 >= 70 THEN 'C'
						 WHEN (#{kor} + #{eng} + #{math}) / 3 >= 60 THEN 'D'
						 ELSE 'F'
					   END)
		 WHERE STU_NO = #{stuNo}
	</update>
	
	<!-- 11. TOP3 -->
	<select id="selectTop3" resultType="Student">
	<!-- CDATA 처음 보는 코드 : 쿼리문에 작다, 크다 크기비교 들어갈 때 쓰면 된다.
		xml을 적는 매퍼라서 꺽쇠< 를 적으면 태그가 시작하는 줄 알고 이상하게 분석한다
		=> 태그아니라고 써주기 위해서 CDATA를 써준다 -->
		<![CDATA[
		SELECT A.RANK, A.STU_NO, A.NAME, A.KOR, A.ENG, A.MATH, A.AVE, A.GRADE
		  FROM (SELECT RANK() OVER(ORDER BY AVE DESC) AS RANK, STU_NO, NAME, KOR, ENG, MATH, AVE, GRADE
		          FROM STUDENT) A
		 WHERE A.RANK <= 3
		]]>
	</select>
	
</mapper>